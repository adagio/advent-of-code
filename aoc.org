* Advent of Code

** Day 7

*** part1

**** parse

patterns

**** networkx

lexicographical_topological_sort
      
*** part2

DiGraphs
digraph.nodes
in_degree


** Day 8

tree

deque

recursion


** Day 9

structure: circular lists
using deque
=rotate = d.appendleft(d.pop())=
rotate(7)
rotate(-1)


** Day 10: The Stars Align

position
velocity

*** minimize from scipy.optimize

=t = minimize(func, 0, (positions, velocities))=
=_x = int( np.round(t.x) )=

** Day 11

list.index(obj)
np.where(ndarray == obj)

** Day 12

*** slice
*** study trend with matplot defaultdict
*** controlled recursion
criteria: stable diff (trend)

